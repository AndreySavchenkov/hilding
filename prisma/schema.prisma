generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            String               @id @default(auto()) @map("_id") @db.ObjectId
  firstName     String
  lastName      String
  workerNumber  String               @unique
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  orders        Order[]              @relation("CreatedBy")
  deliveries    Order[]              @relation("DeliveredBy")
  subscriptions DriverSubscription[]
  isSubscribed  Boolean              @default(false)
}

model Order {
  id                         String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt                  DateTime  @default(now())
  updatedAt                  DateTime  @updatedAt
  createdById                String?   @db.ObjectId
  createdBy                  User?     @relation("CreatedBy", fields: [createdById], references: [id])
  deliveredById              String?   @db.ObjectId
  deliveredBy                User?     @relation("DeliveredBy", fields: [deliveredById], references: [id])
  deliveredAt                DateTime?
  lineOptions                String
  areaOptions                String
  pallets                    Boolean?  @default(false)
  scotchTape                 Boolean?  @default(false)
  whiteBraid                 Boolean?  @default(false)
  blackBelt                  Boolean?  @default(false)
  whiteBelt                  Boolean?  @default(false)
  paperLining90              Boolean?  @default(false)
  paperLining101             Boolean?  @default(false)
  cartonBox80                Boolean?  @default(false)
  cartonBox90                Boolean?  @default(false)
  cartonBox120               Boolean?  @default(false)
  cartonBox140               Boolean?  @default(false)
  cartonBox160               Boolean?  @default(false)
  cartonBox180               Boolean?  @default(false)
  downPaperXFirm             Boolean?  @default(false)
  downPaperVagstranda        Boolean?  @default(false)
  upPaperCommon              Boolean?  @default(false)
  upPaperVagstranda          Boolean?  @default(false)
  stretch                    Boolean?  @default(false)
  nylon8090                  Boolean?  @default(false)
  nylon120140                Boolean?  @default(false)
  nylon160                   Boolean?  @default(false)
  nylon180                   Boolean?  @default(false)
  separateSkarer             Boolean?  @default(false)
  triangularCartonSkarer     Boolean?  @default(false)
  paperLiningSkarer8090      Boolean?  @default(false)
  paperLiningSkarer105       Boolean?  @default(false)
  paperLiningSkarer120140    Boolean?  @default(false)
  paperLiningSkarer160       Boolean?  @default(false)
  separateSnarum             Boolean?  @default(false)
  triangularCartonSnarum     Boolean?  @default(false)
  paperLiningSnarum8090      Boolean?  @default(false)
  paperLiningSnarum120140    Boolean?  @default(false)
  paperLiningSnarum160       Boolean?  @default(false)
  separateSkotterud          Boolean?  @default(false)
  triangularCartonSkotterud  Boolean?  @default(false)
  paperLiningSkotterud8090   Boolean?  @default(false)
  paperLiningSkotterud120140 Boolean?  @default(false)
}

model DriverSubscription {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  endpoint  String
  p256dh    String
  auth      String
  deviceId  String
  userId    String?  @db.ObjectId
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}
